#!/command/with-contenv bash
# ==============================================================================
# Home Assistant Add-on: Cloudflare Dynamic DNS Updater
# Runs the Cloudflare Dynamic DNS Updater service
# ==============================================================================

# Updated from mrmichaelrb:
# https://github.com/mrmichaelrb/hassio-addons/blob/main/godaddy_dns/rootfs/usr/bin/godaddy_update_dns.sh

ACTION="${1}"
HOSTNAME="${2}"
RECORD_TYPE="${3}"
DATA_VALUE="${4}"

EXIT_CODE=0

ZONE_ID=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones?name=${CLOUDFLARE_DOMAIN}&status=active" \
    -H "Accept: application/json" \
    -H "Content-Type: application/json" \
    -H "X-Auth-Email: ${CLOUDFLARE_EMAIL}" \
    -H "Authorization: Bearer ${CLOUDFLARE_SECRET}" \
    | jq -r '.result[] | .[0] | .id')

echo "Cloudflare DNS Zone ID has been fetched: ${ZONE_ID}"

if [ "${ZONE_ID}" = 'null' ]
then
    echo "Failed to aquire Cloudflare DNS Zone ID"
    exit 1
fi

DNS_RECORD_ANSWER=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/dns_records?type=${RECORD_TYPE}&name=${FQDN}" \
    -H "Accept: application/json" \
    -H "Content-Type: application/json" \
    -H "X-Auth-Email: ${CLOUDFLARE_EMAIL}" \
    -H "Authorization: Bearer ${CLOUDFLARE_SECRET}")

DNS_RECORD_ID=$(echo ${DNS_RECORD_ANSWER} | jq -r '.result[] | .[0] | .id')
DNS_RECORD_CONTENT=$(echo ${DNS_RECORD_ANSWER} | jq -r '.result[] | .[0] | .content')

echo "Cloudflare DNS Record for ${FQDN} has been fetched"

if [ "${DNS_RECORD_ID}" = 'null' ]
then
    echo "Failed to aquire Cloudflare DNS Record ID"
    exit 1
fi

if [ "${ACTION}" = 'remove' ]
then
    ANSWER=$(curl -s -X DELETE "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/dns_records/${DNS_RECORD_ID}" \
        -H"'Accept: application/json" \
        -H "Content-Type: application/json" \
        -H "X-Auth-Email: ${CLOUDFLARE_EMAIL}" \
        -H "Authorization: Bearer ${CLOUDFLARE_SECRET}") \
        || EXIT_CODE=${?}
else

    echo "Attempting to update Cloudflare DNS with IP address: ${DATA_VALUE}, in zone: ${ZONE_ID}, record: ${DNS_RECORD_ID}, current IP: ${DNS_RECORD_CONTENT}"

    if [ "${DNS_RECORD_CONTENT}" = ${IPV4} ]
    then
        echo "Cloudflare DNS already has a matching IP address for ${FQDN}"
        exit 0
    fi

    ANSWER=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/dns_records/${DNS_RECORD_ID}" \
        -H "Accept: application/json" \
        -H "Content-Type: application/json" \
        -H "X-Auth-Email: ${CLOUDFLARE_EMAIL}" \
        -H "Authorization: Bearer ${CLOUDFLARE_SECRET}" \
        --data "{\"type\":\"${RECORD_TYPE}\",\"name\":\"${HOSTNAME}\",\"content\":\"${DATA_VALUE}\",\"ttl\":${CLOUDFLARE_TTL},\"proxied\":${CLOUDFLARE_PROXIED}}") \
        || EXIT_CODE=${?}
fi

if [ "${ANSWER}" != '' ]
then
    echo "${ANSWER}"
fi

exit ${EXIT_CODE}
